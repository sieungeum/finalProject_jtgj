<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jtgj.finalProject.admin.dao.IAdminDAO">

<select id="getUserList" resultType="com.jtgj.finalProject.user.dto.UserDTO">

		SELECT
			  user_id
			, user_name
			, user_email
			, user_date
			, user_account
			, user_rank 
		FROM 
			users
		WHERE 1=1
 
</select>

<update id="userDo" parameterType="com.jtgj.finalProject.user.dto.UserDTO">
	    UPDATE 
	        users
	    SET
	    	user_rank = 'K'                      
	    WHERE 
	        user_id = #{userId} 
	        AND user_name = #{userName}
	</update>
	
<update id="userProDo" parameterType="com.jtgj.finalProject.user.dto.UserDTO">
	    UPDATE 
	        users
	    SET
	    	user_rank = 'M'                      
	    WHERE 
	        user_id = #{userId} 
	        AND user_name = #{userName}
	</update>
	
<update id="userLDo" parameterType="com.jtgj.finalProject.user.dto.UserDTO">
	    UPDATE 
	        users
	    SET   
	    	user_rank = 'L'                      
	    WHERE 
	        user_id = #{userId} 
	        AND user_name = #{userName}
	</update>

<update id="userDelDo" parameterType="com.jtgj.finalProject.user.dto.UserDTO">
	    UPDATE 
	        users
	    SET
	    	user_rank = 'N'                      
	    WHERE 
	        user_id = #{userId} 
	        AND user_name = #{userName}
	</update>
	
<update id="faqAstDo" parameterType="com.jtgj.finalProject.faq.dto.FaqDTO">
	    UPDATE 
	        faqs
	    SET
	    	faq_ast = 'Y'                      
	    WHERE 
	        faq_no = #{faqNo} 
	</update>
	
	<update id="faqAstDelDo" parameterType="com.jtgj.finalProject.faq.dto.FaqDTO">
	    UPDATE 
	        faqs
	    SET
	    	faq_ast = 'N'                      
	    WHERE 
	        faq_no = #{faqNo} 
	</update>
	

	
	
<select id="getFaqList" resultType="com.jtgj.finalProject.faq.dto.FaqDTO">

				SELECT
					a.faq_no,
					a.user_id,
					a.faq_title,
					a.faq_count,
					b.user_name,
					TO_CHAR(a.faq_date, 'MM.dd') AS faq_date,
					a.faq_ast
				FROM 
					faqs a
					, users b
				WHERE 1=1
					AND a.user_id = b.user_id
					AND a.faq_del_yn = 'N'
				ORDER BY faq_no DESC
			

</select>
 
	<select id="getMater" parameterType="int" resultType="com.jtgj.finalProject.estimate.dto.EstimateDTO">
	    SELECT * 
	    FROM building_materials 
	    WHERE mater_no = #{materNo}
	    AND ROWNUM = 1
	</select>

	<update id="editMater" parameterType="com.jtgj.finalProject.estimate.dto.EstimateDTO">
		UPDATE
			building_materials
		SET
			  mater_name = #{materName}
			, mater_category = #{materCategory}
			, mater_gas_kg = #{materGasKg}
			, mater_img = #{materImg}
			, mater_price = #{materPrice}
			, mater_durability = #{materDurability}
			, mater_info = #{materInfo}
			, mater_classify = #{materClassify}
		WHERE 1=1
			AND mater_no = #{materNo}
	</update>

	<insert id="writeMater" parameterType="com.jtgj.finalProject.estimate.dto.EstimateDTO">
	    INSERT INTO building_materials (
	        mater_no,
	        mater_name,
	        mater_category,
	        mater_gas_kg,
	        mater_img,
	        mater_price,
	        mater_durability,
	        mater_info,
	        mater_classify
	    ) VALUES (
	        (SELECT NVL(MAX(mater_no), 0) + 1 FROM building_materials),
	        #{materName},
	        #{materCategory},
	        #{materGasKg},
	        #{materImg},
	        #{materPrice},
	        #{materDurability},
	        #{materInfo},
	        #{materClassify}
	    )
	</insert>
	
	<delete id="deleteMater">
		DELETE 
		FROM building_materials
		WHERE mater_no = #{materNo}
	</delete>


<select id="getMaterNo" resultType="int">
		SELECT
			COUNT(*) + 1
		FROM
			building_materials
</select>
	
<insert id="insertAttachMater" parameterType="com.jtgj.finalProject.attach.dto.AttachDTO">
		INSERT INTO attach(
			atch_no
			, atch_parent_no
			, atch_file_name
			, atch_original_name
			, atch_file_size
			, atch_fancy_size
			, atch_content_type
			, atch_path
			, atch_type
		) VALUES (
			seq_attach.nextval
			, #{atchParentNo}
			, #{atchFileName}
			, #{atchOriginalName}
			, #{atchFileSize}
			, #{atchFancySize}
			, #{atchContentType}
			, #{atchPath}
			, #{atchType}
		)
			
	</insert>
	
	<select id="getAttachMaterList" parameterType="map" resultType="com.jtgj.finalProject.attach.dto.AttachDTO">
		SELECT
			atch_no
			, atch_parent_no
			, atch_file_name
			, atch_original_name
			, atch_file_size
			, atch_fancy_size
			, atch_content_type
			, atch_path
			, atch_type
		FROM
			attach
		WHERE 1 = 1
		  AND atch_parent_no = #{faqNo}
		  AND atch_type = #{atchType}
	</select>

<select id="getNotiList" resultType="com.jtgj.finalProject.faq.dto.NoticeDTO">
		SELECT *
	    FROM (
	        SELECT
	            a.notice_no,
	            a.notice_title,
	            b.user_id,
	            b.user_name,
	            a.notice_content,
	            TO_CHAR(a.notice_date, 'MM.dd') AS notice_date
	        FROM 
	            notices a, users b
	        WHERE 1=1
	            AND a.user_id = b.user_id
	        ORDER BY a.notice_no DESC
	    )
	    
	</select>

	<select id="getNotiNo" resultType="int">
		SELECT 
			COUNT(*) + 1
		FROM 
			notices
	</select>
	
		<select id="all_mater" resultType="com.jtgj.finalProject.estimate.dto.EstimateDTO">
		SELECT
			mater_no,
			mater_category,
			mater_name,
			mater_gas_kg,
			mater_img,
			mater_price,
			mater_durability,
			mater_info,
			mater_classify,
			kg_per_pyeong
		FROM building_materials
		WHERE 1=1
	</select>
	
	
	<select id="getCBList" resultType="com.jtgj.finalProject.companyBoard.dto.CompanyBoardDTO">
	    SELECT 
	        a.cp_board_no,
	        a.cp_board_intro,
	        a.cp_board_content,
	        a.user_id,
	        b.cp_ceo_name,
	        c.user_name,
	        a.cp_board_area,
	        a.cp_board_date,
	        a.cp_board_reper_img,
	        a.cp_board_del_yn,
	        c.user_prof_img, -- 추가: 프로필 이미지
	        b.cp_ceo_name AS cpCeoName,       -- 기업 대표 이름
	        b.cp_open_date AS cpOpenDate,    -- 기업 설립일
	        c.user_phone AS userPhone,       -- 연락처
	        c.user_email AS userEmail,       -- 이메일
	        b.cp_address AS cpAddress        -- 주소
		FROM 
	        company_board a
	    JOIN 
	        company_info b ON a.user_id = b.user_id
	    JOIN 
	        users c ON a.user_id = c.user_id
	    WHERE 
	        a.cp_board_del_yn = 'N'
	</select>
	
</mapper>