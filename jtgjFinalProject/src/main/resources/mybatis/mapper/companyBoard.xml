<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jtgj.finalProject.companyBoard.dao.ICompanyBoardDAO">
	<select id="getCompanyBoardList" resultType="com.jtgj.finalProject.companyBoard.dto.CompanyBoardDTO">
	    SELECT 
	        a.cp_board_no,
	        a.cp_board_intro,
	        a.cp_board_content,
	        a.user_id,
	        b.cp_ceo_name,
	        c.user_name,
	        a.cp_board_area,
	        a.cp_board_date,
	        a.cp_board_reper_img,
	        a.cp_board_del_yn,
	        c.user_prof_img, -- 추가: 프로필 이미지
	        b.cp_ceo_name AS cpCeoName,       -- 기업 대표 이름
	        b.cp_open_date AS cpOpenDate,    -- 기업 설립일
	        c.user_phone AS userPhone,       -- 연락처
	        c.user_email AS userEmail,       -- 이메일
	        b.cp_address AS cpAddress        -- 주소
		FROM 
	        company_board a
	    JOIN 
	        company_info b ON a.user_id = b.user_id
	    JOIN 
	        users c ON a.user_id = c.user_id
	    WHERE 
	        a.cp_board_del_yn = 'N'
	</select>
	
	<insert id="writeCompanyBoard" parameterType="com.jtgj.finalProject.companyBoard.dto.CompanyBoardDTO">
		INSERT INTO company_board(
			cp_board_no, 				
		    cp_board_intro,		
		    user_id ,
		    user_name,				
		    cp_board_content,		
		    cp_board_area,			
		    cp_board_date,				
		    cp_board_reper_img,	
		    cp_board_youtube_link,
		    cp_board_del_yn 		
		) VALUES (
			(SELECT COUNT(*)+1 FROM company_board),
			#{cpBoardIntro},
			#{userId},
			#{userName},
			#{cpBoardContent},
			#{cpBoardArea},
			SYSDATE,
			#{cpBoardReperImg},
			#{cpBoardYoutubeLink},
			'N'
		)
	</insert>
	
	<select id="checkIfActivePostExists" resultType="int">
	    SELECT COUNT(*)
	    FROM company_board
	    WHERE user_id = #{userId}
	      AND cp_board_del_yn = 'N'
	</select>
	
	<!-- 기업 홍보 게시판 상세보기 -->
	<select id="getCompanyBoardDetail" parameterType="int" resultType="com.jtgj.finalProject.companyBoard.dto.CompanyBoardDTO">
	    SELECT 
	        a.cp_board_no,
	        a.cp_board_intro,
	        a.cp_board_content,         <!-- 게시글 내용 -->
	        a.user_id,
	        c.user_name,
	        a.cp_board_area,
	        a.cp_board_date,
	        a.cp_board_reper_img,
	        a.cp_board_youtube_link,
	        c.user_prof_img AS userProfImg, <!-- 프로필 이미지 -->
	        b.cp_ceo_name AS cpCeoName,       <!-- 기업 대표 이름 -->
	        TO_CHAR(b.cp_open_date, 'YYYY-MM-DD') AS cpOpenDate,    <!-- 기업 설립일 -->
	        c.user_phone AS userPhone,       <!-- 연락처 -->
	        c.user_email AS userEmail,       <!-- 이메일 -->
	        b.cp_address AS cpAddress        <!-- 주소 -->
	    FROM 
	        company_board a
	    JOIN company_info b ON a.user_id = b.user_id
	    JOIN users c ON a.user_id = c.user_id
	    WHERE 
	        a.cp_board_no = #{cpBoardNo}
	</select>
	
	<!-- 게시글 수정 -->
    <update id="updateCompanyBoard" parameterType="com.jtgj.finalProject.companyBoard.dto.CompanyBoardDTO">
        UPDATE company_board
        SET 
            cp_board_intro = #{cpBoardIntro},
            cp_board_content = #{cpBoardContent},
            cp_board_area = #{cpBoardArea},
            cp_board_reper_img = #{cpBoardReperImg},
            cp_board_youtube_link = #{cpBoardYoutubeLink} <!-- YouTube 링크 업데이트 추가 -->
        WHERE cp_board_no = #{cpBoardNo}
    </update>
    
    <insert id="writeCompanyProject" parameterType="com.jtgj.finalProject.companyBoard.dto.CompanyProjectDTO">
	    INSERT INTO company_project_r (
	        user_id, 
	        pt_no,
	        pt_thumbnail,
	        pt_content,
	        pt_title,
	        pt_design,
	        pt_construction,
	        pt_land_area,
	        pt_building_area, 
	        pt_total_floor_area,
	        pt_floor_num, 
	        pt_household_num, 
	        pt_completion_year, 
	        pt_location,
	        pt_del_yn <!-- 삭제 여부 추가 -->
	    ) VALUES (
	        #{userId}, 
	        (SELECT COUNT(*)+1 FROM company_project_r), 
	        #{ptThumbnail}, 
	        #{ptContent}, 
	        #{ptTitle}, 
	        #{ptDesign}, 
	        #{ptConstruction}, 
	        #{ptLandArea}, 
	        #{ptBuildingArea}, 
	        #{ptTotalFloorArea}, 
	        #{ptFloorNum}, 
	        #{ptHouseholdNum}, 
	        #{ptCompletionYear}, 
	        #{ptLocation},
	        'N' <!-- 기본값: N -->
	    )
	</insert>
	
	<select id="getCompanyProjectsByUserId" parameterType="String" resultType="com.jtgj.finalProject.companyBoard.dto.CompanyProjectDTO">
	    SELECT 
	        user_id,
	        pt_no,
	        pt_thumbnail,
	        pt_content,
	        pt_title,
	        pt_design,
	        pt_construction,
	        pt_land_area,
	        pt_building_area,
	        pt_total_floor_area,
	        pt_floor_num,
	        pt_household_num,
	        pt_completion_year,
	        pt_location,
	        pt_del_yn
	    FROM company_project_r
	    WHERE user_id = #{userId}
	    	AND pt_del_yn = 'N' <!-- 삭제되지 않은 항목만 -->
	    ORDER BY pt_no ASC
	</select>
	
	<select id="getCompanyProjectDetail" parameterType="int" resultType="com.jtgj.finalProject.companyBoard.dto.CompanyProjectDTO">
	    SELECT 
	        p.user_id,
	        p.pt_no,
	        p.pt_thumbnail,
	        p.pt_content,
	        p.pt_title,
	        p.pt_design,
	        p.pt_construction,
	        p.pt_land_area,
	        p.pt_building_area,
	        p.pt_total_floor_area,
	        p.pt_floor_num,
	        p.pt_household_num,
	        p.pt_completion_year,
	        p.pt_location,
	        p.pt_del_yn, <!-- 삭제 여부 추가 -->
	        b.cp_board_no -- 추가: company_board 테이블에서 가져오는 cp_board_no
	    FROM 
	        company_project_r p
	    LEFT JOIN 
	        company_board b 
	    ON 
	        p.user_id = b.user_id
	    WHERE 
	        p.pt_no = #{ptNo}
	        AND p.pt_del_yn = 'N' <!-- 삭제되지 않은 항목만 -->
	</select>
	
	<update id="updateCompanyProject" parameterType="com.jtgj.finalProject.companyBoard.dto.CompanyProjectDTO">
	    UPDATE company_project_r
	    SET 
	        pt_thumbnail = #{ptThumbnail},
	        pt_content = #{ptContent},
	        pt_title = #{ptTitle},
	        pt_design = #{ptDesign},
	        pt_construction = #{ptConstruction},
	        pt_land_area = #{ptLandArea},
	        pt_building_area = #{ptBuildingArea},
	        pt_total_floor_area = #{ptTotalFloorArea},
	        pt_floor_num = #{ptFloorNum},
	        pt_household_num = #{ptHouseholdNum},
	        pt_completion_year = #{ptCompletionYear},
	        pt_location = #{ptLocation}
	    WHERE pt_no = #{ptNo}
	</update>
	
	<select id="getCompanyBoardByUserId" parameterType="String" resultType="com.jtgj.finalProject.companyBoard.dto.CompanyBoardDTO">
	    SELECT 
	        a.user_id,
	        c.user_name,
	        c.user_prof_img
	    FROM 
	        company_board a
	    JOIN 
	        users c ON a.user_id = c.user_id
	    WHERE 
	        a.user_id = #{userId}
	</select>
	
	<update id="deleteCompanyBoard" parameterType="int">
	    UPDATE company_board
	    SET cp_board_del_yn = 'Y'
	    WHERE cp_board_no = #{cpBoardNo}
	</update>
	
	<update id="deleteCompanyProject" parameterType="int">
	    UPDATE company_project_r
	    SET pt_del_yn = 'Y'
	    WHERE pt_no = #{ptNo}
	</update>
	
<!-- 	회사 디테일 번호만 가져오기
	<select id="getNumComBoard" parameterType="String" resultType="int">
		SELECT
			cp_board_no
		FROM company_board
		WHERE 1=1
			AND user_id = #{userId}
	</select> -->
	
	<!-- 회사 디테일 번호만 가져오기 -->
	<select id="getNumComBoard" parameterType="String" resultType="com.jtgj.finalProject.companyBoard.dto.CompanyBoardDTO">
		SELECT
			cp_board_no,
			cp_board_del_yn
		FROM company_board
		WHERE 1=1
			AND user_id = #{userId}
	</select>
	
	
</mapper>